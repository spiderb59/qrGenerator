const pool = require('../config/database');

/**
 * Saves visitor details to the database.
 *
 * @param {string} id - Unique identifier for the visitor.
 * @param {string} name - Visitor's name.
 * @param {string} companyName - Visitor's company name.
 * @param {string} phone - Visitor's phone number.
 * @param {string} email - Visitor's email address.
 * @param {string} passPath - Path to the visitor's pass (optional).
 * @returns {Promise<object>} An object containing success status and message.
 */
async function saveVisitorDetails(id, name, companyName, phone, email, passPath) {
  try {
    // Prepare data with Japan timezone-aware timestamp
    const formattedDateTime = await getJapanDateTimeString();
    const [mysqlFormattedDateTime] = formattedDateTime.split(' ');

    const query = `
      INSERT INTO visitor_details (id, name, company_name, phone, email, created_at, pass_path)
      VALUES (?, ?, ?, ?, ?, ?, ?)
    `;

    await pool.query(query, [id, name, companyName, phone, email, mysqlFormattedDateTime, passPath]);

    return { success: true, message: 'Visitor details saved successfully.' };
  } catch (error) {
    console.error('Error saving visitor details:', error);
    return { success: false, message: 'Failed to save visitor details.' };
  }
}

/**
 * Generates a formatted date and time string in Japan timezone.
 *
 * @returns {Promise<string>} The formatted date and time string.
 */
async function getJapanDateTimeString() {
  const options = { timeZone: 'Asia/Tokyo' };
  const now = new Date();
  return now.toLocaleString('en-US', options);
}

module.exports = {
  saveVisitorDetails,
};
